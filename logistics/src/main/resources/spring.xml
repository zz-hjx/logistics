<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

<context:component-scan base-package="cn.zz.logistics"></context:component-scan>

<context:property-placeholder location="classpath:db.properties"/>

 <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		<property name="maxActive" value="${jdbc.maxActive}"/>
	</bean>
 <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
 <!-- 注入插件 -->
		<property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageInterceptor">
					<property name="properties">
						<value>
							<!-- 方言 -->
							helperDialect=mysql
						</value>
					</property>
				</bean>
			</array>
		</property>
 	<property name="dataSource" ref="dataSource"></property>
 	<property name="mapperLocations">
 		<array>
 			<value>classpath:cn/zz/ssm/mapper/*Mapper.xml</value>
 		</array>
 	</property>
 	<property name="typeAliasesPackage" value="cn.zz.logistics.pojo"></property>
 </bean>
<!-- 配置包扫描.创建 Mapper映射接口的代理对象 -->
<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	<!-- 注入需要创建对象的接口，UserMapper接口 -->
	<property name="basePackage" value="cn.zz.logistics.mapper"></property>
	<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
</bean>
<!-- 配置事务管理器 -->
<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
</bean>
<!-- 配置事务控制 -->
<tx:advice id="txAdvice" transaction-manager="transactionManager">
	<tx:attributes>
		<tx:method name="get*" read-only="true" timeout="5"/>
		<tx:method name="*" read-only="false" timeout="5"/>
	</tx:attributes> 
</tx:advice>
<!-- 使用AOP 将事务切入到service层 -->
<aop:config>
	<aop:pointcut expression="execution(* cn.zz.logistics.service..*.*(..))" id="pt"/>
	
	<aop:advisor advice-ref="txAdvice" pointcut-ref="pt"/>
</aop:config>
<!-- 引入其他配置文件 
<import resource="classpath:springmvc.xml"/>--> 
 

</beans>
